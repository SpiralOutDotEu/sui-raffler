name: Deploy Next.js to VPS

on:
  push:
    branches:
      - main
      - testnet

env:
  NODE_VERSION: 22.11.0

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci --ignore-scripts

      - name: Build project
        working-directory: frontend
        run: npm run build

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            set -e  # Exit on error
            set -x  # Print commands as they execute

            echo "🔧 Setting up NVM..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use ${{ env.NODE_VERSION }}

            echo "✅ NVM setup complete"

            # Select deployment directory based on branch
            # main branch -> suiraffler-prod (production)
            # testnet branch -> suiraffler-testnet (testnet)
            set +e  # Temporarily disable exit on error for if statement
            if [ "${{ github.ref_name }}" = "main" ]; then
              APP_DIR="${{ secrets.APP_DIR_PROD }}"
              SERVICE_NAME="suiraffler-prod"
              BRANCH="main"
            else
              APP_DIR="${{ secrets.APP_DIR_TESTNET }}"
              SERVICE_NAME="suiraffler-testnet"
              BRANCH="testnet"
            fi
            set -e  # Re-enable exit on error

            echo "📦 Deploying $SERVICE_NAME from branch $BRANCH to $APP_DIR"

            echo "🗂️  Changing to app directory..."
            cd $APP_DIR || { echo "❌ Failed to cd to $APP_DIR"; exit 1; }

            echo "🔀 Checking out branch $BRANCH..."
            git checkout $BRANCH || { echo "❌ Failed to checkout branch $BRANCH"; exit 1; }

            echo "⬇️  Pulling latest changes..."
            git pull origin $BRANCH || { echo "❌ Failed to pull from origin $BRANCH"; exit 1; }

            echo "📁 Changing to frontend directory..."
            cd frontend || { echo "❌ Failed to cd to frontend"; exit 1; }

            echo "📥 Installing dependencies..."
            npm ci --ignore-scripts || { echo "❌ Failed to install dependencies"; exit 1; }

            echo "🔨 Building project..."
            npm run build || { echo "❌ Failed to build project"; exit 1; }

            echo "🔄 Restarting PM2 service..."
            pm2 restart $SERVICE_NAME || { echo "❌ Failed to restart PM2 service"; exit 1; }

            echo "✅ Deployment successful!"
