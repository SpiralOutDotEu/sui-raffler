name: Deploy to VPS

on:
  push:
    branches: ["main", "testnet"]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: Production

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0" # LTS
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies (frontend)
        working-directory: frontend
        run: npm ci --ignore-scripts

      - name: Build standalone
        working-directory: frontend
        run: npm run build

      - name: Package artifact
        working-directory: frontend
        run: |
          set -euo pipefail
          REL=$(date +'%Y%m%d%H%M%S')
          echo "REL=$REL" >> $GITHUB_ENV
          mkdir -p release/$REL/.next
          # copy minimal runtime produced by `output: 'standalone'`
          cp -r .next/standalone release/$REL/.next/standalone
          cp -r .next/static     release/$REL/.next/static
          # optional assets
          [ -d public ] && cp -r public release/$REL/public || true
          cp package.json        release/$REL/package.json
          tar -C release -czf release.tar.gz $REL
          sha256sum release.tar.gz > release.tar.gz.sha256

      - name: Prepare SSH connection
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Validate required secrets
          if [ -z "${{ secrets.SSH_HOST }}" ] || [ -z "${{ secrets.SSH_USER }}" ]; then
            echo "Error: SSH_HOST or SSH_USER secrets are not set"
            exit 1
          fi

          # Create SSH config
          cat > ~/.ssh/config <<EOF
          Host vps
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USER }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          EOF
          chmod 600 ~/.ssh/config

      - name: Upload & deploy to VPS
        run: |
          # Choose target dir based on branch
          if [ "${{ github.ref_name }}" = "main" ]; then
            APP_DIR="${{ secrets.APP_DIR_MAIN }}"
          else
            APP_DIR="${{ secrets.APP_DIR_TESTNET }}"
          fi

          scp frontend/release.tar.gz frontend/release.tar.gz.sha256 vps:/tmp/

          ssh vps "
            set -euo pipefail
            cd /tmp
            sha256sum -c release.tar.gz.sha256
            REL=\$(tar -tf release.tar.gz | head -n1 | cut -d/ -f1)
            mkdir -p $APP_DIR/releases/\$REL
            tar -C $APP_DIR/releases -xzf release.tar.gz
            rm -f release.tar.gz release.tar.gz.sha256
            ln -sfn $APP_DIR/releases/\$REL $APP_DIR/current
            cp $APP_DIR/shared/.env $APP_DIR/current/.env || true
            sed -i 's/0.0.0.0/127.0.0.1/g' $APP_DIR/current/.next/standalone/server.js || true
            pm2 startOrReload $APP_DIR/ecosystem.config.cjs
            pm2 save
            cd $APP_DIR/releases && ls -1t | tail -n +6 | xargs -r rm -rf
          "
