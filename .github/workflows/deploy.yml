name: Deploy Next.js to VPS

on:
  push:
    branches:
      - main
      - testnet

env:
  NODE_VERSION: 22.11.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci --ignore-scripts

      - name: Build project
        working-directory: frontend
        run: npm run build

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            set -e
            set -x

            echo "üîß Setting up NVM..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use ${{ env.NODE_VERSION }}
            echo "‚úÖ NVM setup complete"

            # Choose branch safely (no exit on false comparison)
            case "${{ github.ref_name }}" in
              main)
                APP_DIR="${{ secrets.APP_DIR_PROD }}"
                SERVICE_NAME="suiraffler-prod"
                BRANCH="main"
                ;;
              testnet)
                APP_DIR="${{ secrets.APP_DIR_TESTNET }}"
                SERVICE_NAME="suiraffler-testnet"
                BRANCH="testnet"
                ;;
              *)
                echo "‚ùå Unknown branch: ${{ github.ref_name }}"
                exit 1
                ;;
            esac

            echo "üì¶ Deploying $SERVICE_NAME from branch $BRANCH to $APP_DIR"

            cd "$APP_DIR" || { echo "‚ùå Failed to cd to $APP_DIR"; exit 1; }
            git checkout "$BRANCH"
            git pull origin "$BRANCH"

            cd frontend
            npm ci --ignore-scripts
            npm run build

            pm2 restart "$SERVICE_NAME"
            echo "‚úÖ Deployment successful!"
